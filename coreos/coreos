#!/bin/bash

set -x

readonly VM='CoreOS'

if VBoxManage list runningvms | grep -q "${VM}"
then
  echo "${VM} VM is already running"
  exit 0
fi

readonly coreos="$( grep 'coreos' '/etc/hosts' )"
readonly coreosip="$( echo "${coreos}" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' )"
readonly host="$( grep 'coreos' '/etc/hosts' | sed -e 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.[0-9]*/\1\.\2\.\3\.1/' -e 's/coreos/host/' )"
readonly hostip="$( echo "${host}" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' )"
readonly sshkey="$( cat ~/.ssh/id_rsa.pub )"


readonly configiso="$( VBoxManage showvminfo "${VM}" --machinereadable | grep '.iso' | sed 's/^".*"="\(.*\)"/\1/' )"
readonly configroot="$( dirname "${configiso}" )/cloud_config"
readonly configfile="${configroot}/openstack/latest/user_data"
rm -rf "${configroot}" | true
mkdir -p "$( dirname "${configfile}" )"


cat <<EOF >"${configfile}"
#cloud-config
hostname: "coreos"
ssh_authorized_keys:
  - "${sshkey}"
users:
  - name: "$( whoami )"
    groups:
      - "sudo"
      - "docker"
    ssh-authorized-keys:
      - "${sshkey}"
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
  - name: "$( cat ~/.ssh/id_rsa.pub | sed -e 's/^ssh-rsa .* //' -e 's/@.*$//' )"
    groups:
      - "sudo"
      - "docker"
    ssh-authorized-keys:
      - "${sshkey}"
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
coreos:
  units:
    - name: systemd-sysctl.service
      command: restart
    - name: systemd-networkd.service
      command: stop
    - name: 00-hostonly.network
      runtime: true
      content: |
        [Match]
        Name=enp0s8
        [Network]
        Address=${coreosip}/24
        LinkLocalAddressing=no
        IPv6AcceptRA=no
    - name: down-interfaces.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/ip link set enp0s8 down
        ExecStart=/usr/bin/ip addr flush dev enp0s8
    - name: systemd-networkd.service
      command: restart
      enable: true
    - name: rpc-statd.service
      command: start
      enable: true
    - name: Users.mount
      command: start
      content: |
        [Mount]
        What=${hostip}:/Users
        Where=/Users
        Type=nfs
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API
        [Socket]
        ListenStream=2375
        BindIPv6Only=both
        Service=docker.service
        [Install]
        WantedBy=sockets.target
write_files:
  - path: "/etc/sysctl.d/10-disable-ipv6.conf"
    permissions: "0644"
    owner: root
    content: |
      net.ipv6.conf.all.disable_ipv6=1
      net.ipv6.conf.default.disable_ipv6=1
  - path: /etc/hosts
    permissions: "0644"
    owner: "root"
    content: |
      127.0.0.1    localhost
      ${coreos}
      ${host}
  - path: "/etc/resolv.conf"
    permissions: "0644"
    owner: "root"
    content: |
$( cat '/etc/resolv.conf' | grep -v '^[[:space:]]*[#;]' | sed 's/^ */      /g' )
EOF

COUNTER=1
while [[ -f "${configiso}.${COUNTER}" ]]
do
  COUNTER=$((COUNTER + 1))
done
mv "${configiso}" "${configiso}.${COUNTER}"
hdiutil makehybrid -iso -joliet -default-volume-name 'config-2' -o "${configiso}" "${configroot}"

VBoxManage startvm "${VM}" --type headless
sleep 20
export DOCKER_HOST='tcp://192.168.56.250:2375'
export DOCKER_API_VERSION='1.22'
docker info
